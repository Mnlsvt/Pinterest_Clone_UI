{"ast":null,"code":"var _jsxFileName = \"/home/mnlsvt/Desktop/pinterest_test/pinterest-clone/src/App.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImagePage(_ref) {\n  let {\n    match\n  } = _ref;\n  const id = match.params.id;\n  const image = initialImages.find(image => image.id === parseInt(id));\n  const otherImages = initialImages.filter(image => image.id !== parseInt(id));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: image.url,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Other Images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"masonry\",\n      children: otherImages.map(image => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/image/${image.id}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-item\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: image.url,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 25\n        }, this)\n      }, image.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n_c = ImagePage;\nfunction HomePage() {\n  _s();\n  const [images, setImages] = useState(initialImages);\n  const handleLike = id => {\n    const newImages = images.map(image => image.id === id ? {\n      ...image,\n      likes: image.likes + 1\n    } : image);\n    setImages(newImages);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Pinterest Clone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"masonry\",\n      children: images.map(image => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/image/${image.id}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: image.url,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-item-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleLike(image.id),\n              children: \"Like\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [image.likes, \" likes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)\n      }, image.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(HomePage, \"5EBCgz4kBxlaNRZx1E5Atwth4FA=\");\n_c2 = HomePage;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      exact: true,\n      component: HomePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/image/:id\",\n      component: ImagePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ImagePage\");\n$RefreshReg$(_c2, \"HomePage\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["ImagePage","_ref","match","id","params","image","initialImages","find","parseInt","otherImages","filter","_jsxDEV","children","src","url","alt","fileName","_jsxFileName","lineNumber","columnNumber","className","map","Link","to","_c","HomePage","_s","images","setImages","useState","handleLike","newImages","likes","onClick","_c2","App","Router","Route","path","exact","component","_c3","$RefreshReg$"],"sources":["/home/mnlsvt/Desktop/pinterest_test/pinterest-clone/src/App.js"],"sourcesContent":["function ImagePage({ match }) {\n    const id = match.params.id;\n    const image = initialImages.find(image => image.id === parseInt(id));\n    const otherImages = initialImages.filter(image => image.id !== parseInt(id));\n\n    return (\n        <div>\n            <img src={image.url} alt=\"\" />\n            <h2>Other Images</h2>\n            <div className=\"masonry\">\n                {otherImages.map(image => (\n                    <Link key={image.id} to={`/image/${image.id}`}>\n                        <div className=\"image-item\">\n                            <img src={image.url} alt=\"\" />\n                        </div>\n                    </Link>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nfunction HomePage() {\n    const [images, setImages] = useState(initialImages);\n\n    const handleLike = (id) => {\n        const newImages = images.map(image =>\n            image.id === id ? { ...image, likes: image.likes + 1 } : image\n        );\n        setImages(newImages);\n    };\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <h1>Pinterest Clone</h1>\n            </header>\n            <div className=\"masonry\">\n                {images.map(image => (\n                    <Link key={image.id} to={`/image/${image.id}`}>\n                        <div className=\"image-item\">\n                            <img src={image.url} alt=\"\" />\n                            <div className=\"image-item-info\">\n                                <button onClick={() => handleLike(image.id)}>\n                                    Like\n                                </button>\n                                <span>{image.likes} likes</span>\n                            </div>\n                        </div>\n                    </Link>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nfunction App() {\n    return (\n        <Router>\n            <Route path=\"/\" exact component={HomePage} />\n            <Route path=\"/image/:id\" component={ImagePage} />\n        </Router>\n    );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}