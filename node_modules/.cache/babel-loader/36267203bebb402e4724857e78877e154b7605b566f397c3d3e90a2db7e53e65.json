{"ast":null,"code":"var _jsxFileName = \"/home/mnlsvt/Desktop/pinterest_test/pinterest-clone/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\n\n// Sample data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialImages = [{\n  id: 1,\n  url: '/beach.jpg',\n  likes: 0\n}, {\n  id: 2,\n  url: 'image2.jpg',\n  likes: 0\n}, {\n  id: 3,\n  url: 'image3.jpg',\n  likes: 0\n}\n// add more image objects...\n];\n\nfunction App() {\n  _s();\n  const [images, setImages] = useState(initialImages);\n  const handleLike = id => {\n    const newImages = images.map(image => image.id === id ? {\n      ...image,\n      likes: image.likes + 1\n    } : image);\n    setImages(newImages);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"masonry\",\n      children: images.map(image => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: image.url,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-item-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleLike(image.id),\n            children: \"Like\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [image.likes, \" likes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this)]\n      }, image.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"5EBCgz4kBxlaNRZx1E5Atwth4FA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","initialImages","id","url","likes","App","_s","images","setImages","handleLike","newImages","map","image","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/mnlsvt/Desktop/pinterest_test/pinterest-clone/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\n// Sample data\nconst initialImages = [\n    { id: 1, url: '/beach.jpg', likes: 0 },\n    { id: 2, url: 'image2.jpg', likes: 0 },\n    { id: 3, url: 'image3.jpg', likes: 0 },\n    // add more image objects...\n];\n\nfunction App() {\n    const [images, setImages] = useState(initialImages);\n\n    const handleLike = (id) => {\n        const newImages = images.map(image =>\n            image.id === id ? { ...image, likes: image.likes + 1 } : image\n        );\n        setImages(newImages);\n    };\n\n    return (\n        <div className=\"App\">\n            <div className=\"masonry\">\n                {images.map(image => (\n                    <div key={image.id} className=\"image-item\">\n                        <img src={image.url} alt=\"\" />\n                        <div className=\"image-item-info\">\n                            <button onClick={() => handleLike(image.id)}>\n                                Like\n                            </button>\n                            <span>{image.likes} likes</span>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;;AAElB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,aAAa,GAAG,CAClB;EAAEC,EAAE,EAAE,CAAC;EAAEC,GAAG,EAAE,YAAY;EAAEC,KAAK,EAAE;AAAE,CAAC,EACtC;EAAEF,EAAE,EAAE,CAAC;EAAEC,GAAG,EAAE,YAAY;EAAEC,KAAK,EAAE;AAAE,CAAC,EACtC;EAAEF,EAAE,EAAE,CAAC;EAAEC,GAAG,EAAE,YAAY;EAAEC,KAAK,EAAE;AAAE;AACrC;AAAA,CACH;;AAED,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAACG,aAAa,CAAC;EAEnD,MAAMQ,UAAU,GAAIP,EAAE,IAAK;IACvB,MAAMQ,SAAS,GAAGH,MAAM,CAACI,GAAG,CAACC,KAAK,IAC9BA,KAAK,CAACV,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGU,KAAK;MAAER,KAAK,EAAEQ,KAAK,CAACR,KAAK,GAAG;IAAE,CAAC,GAAGQ,KAC7D,CAAC;IACDJ,SAAS,CAACE,SAAS,CAAC;EACxB,CAAC;EAED,oBACIV,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,eAChBd,OAAA;MAAKa,SAAS,EAAC,SAAS;MAAAC,QAAA,EACnBP,MAAM,CAACI,GAAG,CAACC,KAAK,iBACbZ,OAAA;QAAoBa,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACtCd,OAAA;UAAKe,GAAG,EAAEH,KAAK,CAACT,GAAI;UAACa,GAAG,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC9BpB,OAAA;UAAKa,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC5Bd,OAAA;YAAQqB,OAAO,EAAEA,CAAA,KAAMZ,UAAU,CAACG,KAAK,CAACV,EAAE,CAAE;YAAAY,QAAA,EAAC;UAE7C;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTpB,OAAA;YAAAc,QAAA,GAAOF,KAAK,CAACR,KAAK,EAAC,QAAM;UAAA;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B,CAAC;MAAA,GAPAR,KAAK,CAACV,EAAE;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQb,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACd,EAAA,CA3BQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AA6BZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}